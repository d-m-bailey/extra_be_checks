#! /bin/bash
#   run_extract: extract with magic

#   Copyright 2023 D. Mitch Bailey  cvc at shuharisystem dot com

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#  Set LVS parameters in lvs_config file

# Use cases
# run_extract [lvs_config_file [top_layout [layout_file]]]

usage="usage: run_extract [lvs_config_file [top_layout [layout_file]]]"
if [[ $# -gt 3 ]]; then
	echo $usage
	exit 1
fi

CONFIG_FILE=$1
DESIGN_NAME=${2:+"-d $2"}

if [[ $# -ne 0 ]]; then  # if config file not specified, skip and use current environment
	source <( $LVS_ROOT/set_lvs_env.py -c $CONFIG_FILE $DESIGN_NAME )
fi
if [[ ! -v EXTRACT_FLATGLOB ]]; then
	echo "Error: LVS environment problem."
	exit 1
fi
export TOP_LAYOUT=${2:-$TOP_LAYOUT}
export LAYOUT_FILE=${3:-$LAYOUT_FILE}

echo " "
echo "Running extract..."

echo "TOP LAYOUT: $TOP_LAYOUT"
echo "LAYOUT FILE: $LAYOUT_FILE"
echo "EXTRACT_FLATGLOB: $(echo $EXTRACT_FLATGLOB | sed -e 's/#[^ ]*//g' -e 's/ /\n /g')"
echo "EXTRACT_ABSTRACT: $(echo $EXTRACT_ABSTRACT | sed -e 's/#[^ ]*//g' -e 's/ /\n /g')"

echo "WORK_ROOT   : ${WORK_ROOT:=$(pwd)/$TOP_SOURCE}"
echo "LOG_ROOT    : ${LOG_ROOT:=$WORK_ROOT}"
echo "SIGNOFF_ROOT: ${SIGNOFF_ROOT:=$WORK_ROOT}"
export LOG_ROOT SIGNOFF_ROOT WORK_ROOT

mkdir -p $LOG_ROOT
mkdir -p $SIGNOFF_ROOT
mkdir -p $WORK_ROOT

# Check for PDK_ROOT and PDK
if [[ -z "$PDK_ROOT" || -z "$PDK" ]]; then
	echo "PDK_ROOT and/or PDK not set."
	exit 1
fi

echo "LOG FILE: $LOG_ROOT/${LOG_FILE:=ext.log}"
rm -f $LOG_ROOT/$LOG_FILE $WORK_ROOT/$LOG_FILE

if cmp -s $PDK_ROOT/$PDK/libs.tech/magic/$PDK.tech $LVS_ROOT/tech/$PDK/$PDK.tech; then
	awk 'NF > 1 && /version/' $LVS_ROOT/tech/$PDK/$PDK.tech
else
	echo "Tech files do not match:"
	grep version $PDK_ROOT/$PDK/libs.tech/magic/$PDK.tech $LVS_ROOT/tech/$PDK/$PDK.tech |
		awk 'NF > 2 && ! /^ *#/'
	echo "Results may be incorrect. Contact efabless to update the soft connection rules."
	#exit 1
fi

if [[ ! -f $WORK_ROOT/layout.cells ]]; then
	$LVS_ROOT/run_hier_check "" "" $TOP_LAYOUT $LAYOUT_FILE
fi

echo $EXTRACT_FLATGLOB |
	sed 's/  */\n/g' >$WORK_ROOT/flatglob

# create work abstract file based on actual cells used (pseudo globbing)
echo $EXTRACT_ABSTRACT |
	sed 's/  */\n/g' >$WORK_ROOT/abstract
if [[ -f $WORK_ROOT/layout.cells ]]; then
	sed -e 's/\*/.*/g' -e 's/^/^/' -e 's/$/$/' $WORK_ROOT/abstract |
		grep -f - $WORK_ROOT/layout.cells >$WORK_ROOT/abstract.glob
else
	cp $WORK_ROOT/abstract $WORK_ROOT/abstract.glob
fi

# Add any cells that should be flattened before extraction to 'flatten'. globbing allowed.
export FLATGLOB_CELLS="$(cat $WORK_ROOT/flatglob 2>/dev/null | grep -v '^#')"
# Add any empty cells that should be extracted as black-boxes to 'abstract'. (globbed version is 'abstract.glob')
export ABSTRACT_CELLS="$(cat $WORK_ROOT/abstract.glob 2>/dev/null | grep -v '^#')"

# Verify that magic is executable.
if ! which magic >&/dev/null; then
	echo "Error: Could not execute magic."
	exit 1
fi

#  Create extraction result directories. No error if they already exist.
echo "Extracting to ${EXT_DIR:=$WORK_ROOT/ext}"
mkdir -p $EXT_DIR

if [[ ! -f $LAYOUT_FILE ]]; then
	echo "Error: File not found: $LAYOUT_FILE"
	exit 2
fi

# Remove any previous extraction results
rm -rf $EXT_DIR/*.ext{,.gz}

#  1. Extract gds_file
date "+BEGIN: %c" >$WORK_ROOT/$LOG_FILE
start_time=$SECONDS

echo " "
if [[ ${TOP_LAYOUT/*analog*/analog} = analog ]]; then
	echo "Extracting as analog. Top ports connected by name." >>$WORK_ROOT/$LOG_FILE
	export EXT_TYPE=analog
else
	echo "Extracting as digital. Top ports unique." >>$WORK_ROOT/$LOG_FILE
	export EXT_TYPE=digital
fi

# script uses TOP, RUN_DIR, CIFIN_STYLE, and EXTRACT_STYLE
echo "CIFIN_STYLE: ${CIFIN_STYLE:=}"
echo "EXTRACT_STYLE: ${EXTRACT_STYLE:=}"
env TOP=$TOP_LAYOUT RUN_DIR=$EXT_DIR magic -dnull -noc -rcfile $LVS_ROOT/tech/magicrc $LVS_ROOT/scripts/gds.$EXT_TYPE.spice.tcl </dev/null |
	tee -a $WORK_ROOT/$LOG_FILE 2>&1
ext_status=${PIPESTATUS[0]}

date "+END: %c" >>$WORK_ROOT/$LOG_FILE
runtime=$((SECONDS - start_time))
hours=$((runtime / 3600))
minutes=$(((runtime % 3600) / 60))
seconds=$(((runtime % 3600) % 60))
printf "Runtime: %d:%02d:%02d (hh:mm:ss)\n" $hours $minutes $seconds >>$WORK_ROOT/$LOG_FILE
if [[ $WORK_ROOT != $LOG_ROOT ]]; then
	cp $WORK_ROOT/$LOG_FILE $LOG_ROOT/$LOG_FILE
fi

# Compress large ext files
find $EXT_DIR -name '*.ext' -size +1M -exec gzip {} \;

# Check that extraction completed successfully
if [[ ${magic_status:=0} -ne 0 || $(grep -c 'exttospice finished.' $LOG_ROOT/$LOG_FILE) -ne 1 ]]; then
	echo "
Error: extraction did not complete successfully"
	exit 4
fi

