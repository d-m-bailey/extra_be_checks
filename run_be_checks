#! /bin/bash
#   run_be_checks: Runs scheck, full_lvs and for digital designs cvc-rv.

#   Copyright 2022 D. Mitch Bailey  cvc at shuharisystem dot com

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#   
#       http://www.apache.org/licenses/LICENSE-2.0
#   
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

# Overview:
#  1. Run hierarchy check
#  2. Run soft connection check
#  3. Run full lvs
#  4. Run cvc for digital designs
#  
#  Add cells to be flattened before extract to 'flatglob' file
#  Add cells to be extracted as black-boxes to 'abstract' file
#  Add cells to be flattened during compare to 'flatten' file
#  Add cells not to be flattened during compare to 'noflatten' file

#  verilog_files defaults to the contents of ../verilog/gl
#  spice_files contains common spice libraries, but may need to be changed.

# Use cases
# run_be_checks top_block netlist_file gds_file	: extract, then check
# run_be_checks top_block netlist_file		: use previous extraction results to compare
# run_be_checks 				: use previous extraction results to compare
if [[ $# -eq 0 ]]; then
	export LAYOUT=$(ls gds/user_*wrapper.gds* | head -1)
	file=${LAYOUT##.*/}
	export TOP=${file%%.gds*}
	if [[ "$TOP" == user_project_wrapper ]]; then
		export NETLIST=verilog/gl/$TOP.v
	else
		export NETLIST=xschem/$TOP.spice
	fi
elif [[ $# -lt 2 || $# -gt 3 ]]; then
	echo "usage: run_be_checks [top_block netlist_file [gds_file]]"
	exit
else
	export TOP=$1
	export NETLIST=$2
	if [[ $# -eq 3 ]]; then
		export LAYOUT=$3
	else
		export LAYOUT=
	fi
fi

echo "TOP: $TOP"
echo "NETLIST: $NETLIST"
echo "LAYOUT: $LAYOUT"

: "${LOG_ROOT:=$(pwd)}"
: "${LVS_ROOT:=$(pwd)}"
: "${SIGNOFF_ROOT:=$(pwd)}"
: "${WORK_ROOT:=$(pwd)}"
export LOG_ROOT LVS_ROOT SIGNOFF_ROOT WORK_ROOT

if [[ ! -f $WORK_ROOT/verilog_files ]]; then
	if [[ -d verilog/gl && $(ls verilog/gl | wc -l) -gt 0 ]]; then
		ls verilog/gl/* > $WORK_ROOT/verilog_files
	elif [[ $PWD == $WORK_ROOT && -d ../verilog/gl && $(ls ../verilog/gl | wc -l) -gt 0 ]]; then
		ls ../verilog/gl/* > $WORK_ROOT/verilog_files
	fi
fi

$LVS_ROOT/run_hier_check $TOP $NETLIST $LAYOUT

# create work abstract file based on actual cells used
if [[ ! -f $WORK_ROOT/abstract ]]; then
	zgrep STRNAME $WORK_ROOT/gds_text/$TOP.gds.txt.gz | \
		grep -f $LVS_ROOT/abstract - | \
		awk '{print $2}' > $WORK_ROOT/abstract
fi

$LVS_ROOT/run_scheck $TOP $LAYOUT

$LVS_ROOT/run_full_lvs $TOP $NETLIST $TOP

if [[ $TOP = "user_project_wrapper" ]]; then
	$LVS_ROOT/run_cvc $TOP
fi

echo "
Soft check result:"
tail -n 20 $LOG_ROOT/$TOP.soft.log | awk '/Final result/,/Logging/' | grep -v ^Logging

echo "
LVS result:"
tail -n 20 $LOG_ROOT/$TOP.lvs.log | awk '/Final result/,/Logging/' | grep -v ^Logging

if [[ $TOP = "user_project_wrapper" ]]; then
	echo "
CVC result:"
	grep 'CVC: Total:' $LOG_ROOT/$TOP.cvc.log
fi
	
